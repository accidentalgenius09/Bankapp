Server Creation using express
---------------

install express 
        npm i express


1. import express

2. create an app using express

3. create port number (3000)

4. create requests according to our project


nodemon Server
--------------

- npm i -g nodemon


User Authentication using express
---------------------------------

JWT(Json Web Token) Token
-------------------------

npm  i jsonwebtoken
jsonwebtoken     - library is used
sign()           - method is used for token generation
verify()         - method to verify jwt tokens

Middlewares
-----------

- Middlewares have the capacity to control server requests
- Its a function with three arguments (req,res,next)

-2 Types
--------
        1.Application Specific Middlewares
        2.Router Specific Middlewares



Solving runtime errors in javascript
------------------------------------

try catch 

try{
        error causing code
}

catch{
        solution
}

mongoDB server
        -shell commands in mongoDB
                -to view databases
                        -> show dbs
                
                -to open a specific database
                        -> use database_name

                -to view collections in a database
                        -> show collections
                
                - to view datas in a collections
                        -> db.collection_name.find()
                
                -to view a single data in a collections
                        -> db.collection_name.findOne({unique data})

                -to insert data
                        -> db.collection_name.insertOne({data})

                -to view any data according to a condition
                        -> db.collection_name.findOne({condition})  ->  (single data)
                        -> db.collection_name.find({condition})     -> (all data)

                -delete
                        -> db.collection_name.deleteOne({unique data}) -> (single data)
                        -> db.collection_name.delete({unique data}) -> (all data)

                        -delete count=0 , if no data is deleted 
                         else it will be a number

                -update
                        -> db.collection_name.updateOne({data to be updated},{new data})


crud - create read update delete


server mongoDB integration
--------------------------

- mongoose (Lib used to integrate db & server)
 - npm i mongoose

 // steps

// 1. import mongoose

// 2. state connection string via mongoose

// 3. define a database model

// 4. export the schema to use in other files


